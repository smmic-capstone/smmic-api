"""
Django settings for SMMIC project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from datetime import datetime, timedelta
from firebase_admin import initialize_app, credentials
from google.auth import load_credentials_from_file
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-^p0g1#%kkbo9_fcu-zix+z=0p6b85z(+imuy&w(n^!gj(_)a3y'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

CORS_ORIGIN_ALLOW_ALL = True

CORS_ALLOW_CREDENTIALS = True

CELERY_BROKER_URL = 'redis://192.168.1.8:8000/'

CORS_ALLOW_HEADERS = [
    'content-type',
    'authorization',
    'X-CSRFToken',
    'uid',
    'sink',
    'sensor',
    'sensortype'
]

AUTH_USER_MODEL = "api.CustomUser"
# Application definition


INSTALLED_APPS = [
    'daphne',
    'channels',
    'api.apps.ApiConfig',
    'rest_framework',
    'corsheaders',
    'djoser',
    'rest_framework_simplejwt.token_blacklist',
    'rest_framework.authtoken',
    'fcm_django',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

ASGI_APPLICATION = 'SMMIC.asgi.application'

CHANNEL_LAYERS = {
    'default' : {
        'BACKEND' : 'channels.layers.InMemoryChannelLayer',
    },
}

REST_FRAMEWORK={
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}

DJOSER = {
    "LOGIN_FIELD" : "email",
    "USER_CREATE_PASSWORD_RETYPE" : True,
    "USER_CHANGED_EMAIL_CONFIRMATION" : True,
    "PASSWORD_CHANGED_EMAIL_CONFIRMATION" : True,
    "SEND_CONFIRMATION_EMAIL" : True,
    "SET_USERNAME_RETYPE" : True,
    "SET_PASSWORD_RETYPE" : True,
    "PASSWORD_RESET_CONFIRM_URL" : 'api/password/reset/confirm/{uid}/{token}',
    "USERNAME_RESET_CONFIRM_URL" : 'email/reset/confirm/{uid}/{token}',
    "ACTIVATION_URL" : 'activate/{uid}/{token}',
    "SEND_ACTIVATION_EMAIL" : False,
    'SERIALIZERS': {
        'password_reset_confirm': 'djoser.serializers.PasswordResetConfirmSerializer',
        'current_user':'api.serializers.CustomUserSerializer',
        'user_create': 'api.serializers.UserCreateSerializer',
        'user' : 'api.serializers.UserCreateSerializer',
    },
}

SIMPLE_JWT = {
    'AUTH_HEADER_TYPES': ('Bearer',),
    'ACCESS_TOKEN_LIFETIME' : timedelta(hours =3),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=30),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': False,
    'USER_ID_FIELD': 'UID',
    'USER_ID_CLAIM': 'user_id',
}

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'SMMIC.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'SMMIC.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]




# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/


MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Manila'

USE_I18N = True

USE_TZ = True

#Mail Config.
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'

# 'live.smtp.mailtrap.io'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'zujuariojj@gmail.com'
 
# 'api' 
EMAIL_HOST_PASSWORD = 'cnqv azpd fmhi gqhs'
# '6ffe947e099a4a0089644ab9d2fd41de'

EMAIL_USE_TLS = True
EMAIL_USE_SSL = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

FIREBASE_CREDENTIALS_PATH = os.path.join(BASE_DIR /'smmic-notifications-firebase-adminsdk-9j7yh-675d9d7b0d.json')



class CustomFirebaseCredentials(credentials.ApplicationDefault):
    def __init__(self, account_file_path: str):
        super().__init__()
        self._account_file_path = account_file_path

    def _load_credential(self):
        if not self._g_credential:
            self._g_credential, self._project_id = load_credentials_from_file(self._account_file_path, scopes=credentials._scopes)


FIREBASE_CREDENTIALS_PATH = os.path.join(BASE_DIR , 'smmic-project-firebase-adminsdk-vatd1-e16088896d.json')

     
custom_credentials = CustomFirebaseCredentials(FIREBASE_CREDENTIALS_PATH)



FIREBASE_MESSAGING_APP = initialize_app(custom_credentials, name='messaging')

FCM_DJANGO_SETTINGS = {
     # an instance of firebase_admin.App to be used as default for all fcm-django requests
     # default: None (the default Firebase app)
    "DEFAULT_FIREBASE_APP": FIREBASE_MESSAGING_APP,
     # default: _('FCM Django')
    "APP_VERBOSE_NAME": "FCM Devices",
     # true if you want to have only one active device per registered user at a time
     # default: False
    "ONE_DEVICE_PER_USER": False,
     # devices to which notifications cannot be sent,
     # are deleted upon receiving error response from FCM
     # default: False
    "DELETE_INACTIVE_DEVICES": False,
}


"smmicproject"
"Database host address:GoEasyonMe.mysql.pythonanywhere-services.com"
"Username:GoEasyonMe"
"smmicDB"
"smmicDBproject"
